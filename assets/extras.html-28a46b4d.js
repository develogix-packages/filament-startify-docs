import{_ as n,o as s,c as a,e as t}from"./app-a94f4892.js";const o={},e=t(`<h1 id="password-confirmation-button-action" tabindex="-1"><a class="header-anchor" href="#password-confirmation-button-action" aria-hidden="true">#</a> Password Confirmation Button Action</h1><p>Startify has a <code>PasswordButtonAction</code> shortcut which extends the default <code>Filament\\Pages\\Actions\\Action</code> class.</p><p>This button action will prompt the user to enter their password for sensitive actions (eg. delete), then will not ask for password again for the # of seconds defined in the filament-startify config (default 300s).</p><div class="language-php" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">DevelogixPackages<span class="token punctuation">\\</span>FilamentStartify<span class="token punctuation">\\</span>Actions<span class="token punctuation">\\</span>PasswordButtonAction</span><span class="token punctuation">;</span>

<span class="token class-name static-context">PasswordButtonAction</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;secure_action&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;doSecureAction&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// Customize the icon, action, modalHeading and anything else.</span>
<span class="token class-name static-context">PasswordButtonAction</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;secure_action&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">label</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Delete&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">icon</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;heroicon-s-shield-check&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">modalHeading</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Confirmation&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token keyword">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">doAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><p>Alternatively if you need the users password for following actions you can use the <code>ForcePasswordButtonAction</code> class.</p><div class="language-php" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">DevelogixPackages<span class="token punctuation">\\</span>FilamentStartify<span class="token punctuation">\\</span>Actions<span class="token punctuation">\\</span>ForcePasswordButtonAction</span><span class="token punctuation">;</span>

<span class="token class-name static-context">ForcePasswordButtonAction</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;secure_action&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;doSecureAction&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">doSecureAction</span><span class="token punctuation">(</span><span class="token keyword type-hint">array</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$currentPassword</span> <span class="token operator">=</span> <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;current_password&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token operator">...</span>
</code></pre></div>`,6),p=[e];function c(i,l){return s(),a("div",null,p)}const r=n(o,[["render",c],["__file","extras.html.vue"]]);export{r as default};
